# most of this file would have been generated by maintain_kubeusers. We don't have it here,
# so faking all by hand
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tools-user
rules:
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces
    - namespaces/status
    - persistentvolumeclaims
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - services
    - services/proxy
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-tool-binding
  namespace: tool-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tools-user
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: test
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: tool-test-psp
spec:
  allowPrivilegeEscalation: false
  allowedHostPaths:
  - pathPrefix: /var/lib/sss/pipes
  - pathPrefix: /data/project
  - pathPrefix: /data/scratch
  - pathPrefix: /public/dumps
    readOnly: true
  - pathPrefix: /mnt/nfs
    readOnly: true
  - pathPrefix: /etc/wmcs-project
    readOnly: true
  - pathPrefix: /etc/ldap.yaml
    readOnly: true
  - pathPrefix: /etc/novaobserver.yaml
    readOnly: true
  - pathPrefix: /etc/ldap.conf
    readOnly: true
  fsGroup:
    ranges:
    - max: 54201
      min: 54201
    rule: MustRunAs
  runAsGroup:
    ranges:
    - max: 54201
      min: 54201
    rule: MustRunAs
  runAsUser:
    ranges:
    - max: 54201
      min: 54201
    rule: MustRunAs
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - projected
  - secret
  - hostPath
  - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tool-test-psp
  namespace: tool-test
rules:
- apiGroups:
  - extensions
  resourceNames:
  - tool-test-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tool-test-psp-binding
  namespace: tool-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tool-test-psp
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: test
---
apiVersion: v1
kind: LimitRange
metadata:
  name: tool-test
  namespace: tool-test
spec:
  limits:
    - type: Container
      default:
        cpu: 500m
        memory: 512Mi
      defaultRequest:
        cpu: 150m
        memory: 256Mi
      max:
        cpu: 1
        memory: 4Gi
      min:
        cpu: 50m
        memory: 100Mi
---
# This has been copied from ops/puppet.git
# specifically: modules/kubeadm/files/psp/base-pod-security-policies.yaml
# more info at https://wikitech.wikimedia.org/wiki/Portal:Toolforge/Admin/Kubernetes/RBAC_and_PSP
#
# PSP primarily for use for future admin-controlled services that don't need
# highly privileged access to things. May also be useful for testing by binding
# a role and binding with kubectl. Toolforge user access is granted by
# maintain-kubeusers so that it locks allowed fsgroup and uids to their actual
# uid/gid.
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
  name: default
spec:
  requiredDropCapabilities:
  - ALL
  allowPrivilegeEscalation: false
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  volumes:
  - 'configMap'
  - 'downwardAPI'
  - 'emptyDir'
  - 'projected'
  - 'secret'
  # Restrict host paths by default
  allowedHostPaths:
  - pathPrefix: '/var/lib/sss/pipes'
    readOnly: false
  - pathPrefix: '/data/project'
    readOnly: false
  - pathPrefix: '/public/dumps'
    readOnly: false
  - pathPrefix: '/public/scratch'
    readOnly: false
  - pathPrefix: '/etc/wmcs-project'
    readOnly: true
  - pathPrefix: '/etc/ldap.yaml'
    readOnly: true
  - pathPrefix: '/etc/novaobserver.yaml'
    readOnly: true
  - pathPrefix: '/etc/ldap.conf'
    readOnly: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: default
rules:
- apiGroups:
  - policy
  resourceNames:
  - default
  resources:
  - podsecuritypolicies
  verbs:
  - use
